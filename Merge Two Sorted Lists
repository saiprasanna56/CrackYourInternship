/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode dummy; // Dummy node to simplify edge cases
        ListNode* tail = &dummy; // Pointer to form the new list

        ListNode* temp1 = list1;
        ListNode* temp2 = list2;

        while (temp1 && temp2) {
            if (temp1->val <= temp2->val) {
                tail->next = temp1; // Append temp1 to the merged list
                temp1 = temp1->next; // Move to the next node in list1
            } else {
                tail->next = temp2; // Append temp2 to the merged list
                temp2 = temp2->next; // Move to the next node in list2
            }
            tail = tail->next; // Advance the tail
        }

        // Append the remaining nodes of list1 or list2
        if (temp1) {
            tail->next = temp1;
        } else {
            tail->next = temp2;
        }

        return dummy.next; // Return the merged list, skipping the dummy node
    }
};
